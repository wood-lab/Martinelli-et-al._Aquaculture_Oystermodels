library(tidyverse)
library(tidyverse)
library(plyr)
library(corrplot)
library(zoo)
library(nloptr)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(tidyr)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
head(prevalence)
library(tidyverse)
library(plyr)
library(corrplot)
library(zoo)
library(nloptr)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(tidyr)
library(tidyverse)
library(plyr)
library(corrplot)
library(zoo)
library(nloptr)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(tidyr)
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "car", "carData", "checkmate", "class", "cli", "clipr", "cluster", "codetools", "coin", "colorspace", "commonmark", "conquer", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "DescTools", "digest", "dplyr", "e1071", "effects", "effectsize", "ellipsis", "emmeans", "EMT", "evaluate", "Exact", "expm", "fansi", "farver", "forcats", "fs", "generics", "ggeffects", "ggplot2", "gld", "glue", "gt", "haven", "highr", "hms", "htmltools", "httr", "insight", "isoband", "jpeg", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "libcoin", "lme4", "lmtest", "lubridate", "magrittr", "maps", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "moments", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "parameters", "performance", "permute", "pillar", "plyr", "prettymapr", "processx", "ps", "quantreg", "R6", "randomizr", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "reprex", "rgdal", "rgeos", "rio", "rlang", "rmarkdown", "rootSolve", "rpart", "rprojroot", "rvest", "sandwich", "sass", "scales", "sf", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "spatial", "stargazer", "statmod", "stringi", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "xfun", "xml2", "yaml", "zoo"))
library(tidyverse)
library(plyr)
library(corrplot)
library(zoo)
library(nloptr)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(tidyr)
library(dplyr)
library(tidyverse)
library(plyr)
library(corrplot)
library(zoo)
library(nloptr)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(tidyr)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
### WORKING DIRECTORY AND PACKAGES
###########################################################
library(tidyverse)
library(plyr)
### WORKING DIRECTORY AND PACKAGES
###########################################################
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
head(prevalence)
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  (1|State/Bay/Farm), family="binomial", data = prevalence)
library(MASS)
install.packages("MASS")
library(MASS)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
head(prevalence)
###########################################################
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(MASS)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  (1|State/Bay/Farm), family="binomial", data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  (1|State/Bay/Farm), family=binomial, data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  random = list(1|State/Bay/Farm, 1|Year), family=binomial, data = prevalence)
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(MASS)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  (1|State/Bay/Farm), family=binomial, data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  random = list(~1|State/Bay/Farm, ~1|Year), family=binomial(link = logit), data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy +  random =list(~1|State/Bay/Farm, ~1|Year), family=binomial(link = logit), data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy, random=list(~1|State/Bay/Farm, ~1|Year), family=binomial(link = logit), data = prevalence)
head(prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy, random=list(~1|State/Bay/Farm, ~1|Year_sc), family=binomial(link = logit), data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy, random=list(~1|State/Bay/Farm), family=binomial(link = logit), data = prevalence)
model1 <- glmmPQL(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy, random=list(~1|State/Bay/Farm, ~1|Year_sc), family=binomial(link = logit), data = prevalence)
getwd()
library(tidyverse)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer) #display.brewer.all()
library(zoo)
library(corrplot)
library(lme4)
library(MASS)
ata <- read.table("Bellingham buoy/CSVs/Bellingham_buoy.csv", header=T,sep=",")
colnames(data) <- c('Date','DOsat', 'SST','Salinity','DOconc', 'Turbidity','Chlorophyll')
data <- mutate(data, Buoy = "Bellingham") # adding col for buoy
# dumping time bc I dont need it
data$Date <- as.Date(data$Date)
# splitting into seasons and year
data <- as.data.frame(data)
yq <- as.yearqtr(as.yearmon(data$Date, "%m/%d/%Y") + 1/12)
data$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Spring", "Summer", "Fall"))
data <- data %>% separate(Date, sep="-", into = c("Year"))
todrop <- which(data$Salinity > 50)
data <- data[-todrop,]
data$ID <- paste(data$Year, data$Season, data$Buoy)
# creating summary table
data.summ <- data %>% group_by(Year, Season, Buoy) %>% summarise_all(funs(mean), na.rm=T)
data.summ$ID <- paste(data.summ$Year, data.summ$Season, data.summ$Buoy)
###########################################################
### BELLINGHAM
###########################################################
data <- read.table("Bellingham buoy/CSVs/Bellingham_buoy.csv", header=T,sep=",")
getwd()
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
head(prevalence)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + State*Season, State*Culture + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
head(prevalence)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + State*Season  + State*Culture + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
anova(model1)
vif(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + State*Season  + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
vif(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + State*Season + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Date) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
### WORKING DIRECTORY AND PACKAGES
###########################################################
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
# dim: 4085, 19
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- dmy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year', 'Day', 'Month'))
prevalence$Date <- dmy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
#### SCALING each column individually
###########################################################
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
head(prevalence)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
vif(model1)
anova(model1)
summary(model1)
anova(model1)
vif(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc  + Thick_sc + Culture + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Culture + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
anova(model1)
vif(model1)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ Tissue_g_sc + y_sc + Thick_sc + Season + Ploidy + (1|Year) + (1|State/Bay/Farm), family="binomial", data = prevalence)
summary(model1)
