panel.grid.minor=element_line(color=NA))
allstates_plot
## PLOTTING MODEL 2
########################
summary(model2)
allstates2 <- ggpredict(model2,c("Culture","State"))
allstates_plot2 <- plot(allstates2, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot2
allstates3 <- ggpredict(model2,c("Season","State"))
allstates_plot3 <- plot(allstates3, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot3
###########################################################
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(wesanderson)
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
# dim: 4085, 19
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- mdy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year','Month', 'Day'))
prevalence$Date <- mdy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
#### SCALING each column individually
###########################################################
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ y + Culture + Ploidy + Season + Thick_sc + (1|Year_sc) + (1|State/Farm), family="binomial", data = prevalence)
summary(model1)
anova(model1)
vif(model1)
car::Anova(model1, type=3) # getting p-values
model2 <- glmer(Infested ~ y_sc + Ploidy + Season*State + Culture*State + (1|Year_sc) + (1|Farm), family="binomial", data = prevalence)
summary(model2)
model2 <- glmer(Infested ~ y_sc + Season*State + Culture*State + (1|Year_sc) + (1|Farm), family="binomial", data = prevalence)
summary(model2)
car::Anova(model2, type=3) # getting p-values
model2 <- glmer(Infested ~ y_sc + Season*State + Culture*State + (1|Year_sc) + (1|Farm), family="binomial", data = prevalence)
summary(model2)
anova(model2)
vif(model2)
car::Anova(model2, type=3) # getting p-values
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(wesanderson)
###########################################################
## ADDING PREVALENCE DATASET
###########################################################
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- mdy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year','Month', 'Day'))
prevalence$Date <- mdy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ y + Culture + Ploidy + Season + Thick_sc + (1|Year_sc) + (1|State/Farm), family="binomial", data = prevalence)
summary(model1)
anova(model1)
vif(model1)
car::Anova(model1, type=3) # getting p-values
model2 <- glmer(Infested ~ y_sc + Season*State + Culture*State + (1|Year_sc) + (1|Farm), family="binomial", data = prevalence)
summary(model2)
anova(model2)
vif(model2)
car::Anova(model2, type=3) # getting p-values
## PLOTTING MODEL 1
########################
allstates <- ggpredict(model1,c("y","Season"))
allstates_plot<-ggplot(allstates,aes(x,predicted,color=group), color=group) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 2)) +
geom_point(size=4) +
geom_errorbar(data=allstates, mapping=aes(x=x, ymin=conf.low, ymax=conf.high), width=0.03) +
geom_line(aes(group=group)) +
xlab("Shell height (cm)") +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
guides(color=guide_legend("Season")) +
theme(plot.title=element_text(size=14,hjust=0.5,face="plain"), axis.text.y=element_text(size=14),
axis.title.y=element_text(size=14), axis.text.x=element_text(size=14), axis.title.x=element_text(size=14),
panel.grid.minor=element_line(color=NA))
allstates_plot
## PLOTTING MODEL 2
########################
summary(model2)
allstates2 <- ggpredict(model2,c("Culture","State"))
allstates_plot2 <- plot(allstates2, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot2
allstates3 <- ggpredict(model2,c("Season","State"))
allstates_plot3 <- plot(allstates3, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot3
########################
## WASHINGTON # similar number bay to farm
wa <- subset(prevalence, prevalence$State =='WA')
modelwa <- glmer(Infested ~ y_sc + Culture + Season + Ploidy + (1|Year_sc) + (1|Bay), family="binomial", data = wa)
summary(modelwa)
head(prevalence)
prev_state <- ggplot(prevalence, aes(x= state, y= infested, fill= site, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(prevalence, aes(x= State, y= Infested, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(prevalence, aes(x= State, y= sum(Infested), fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Infested', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(prevalence, aes(x= State, y= Infested, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Infested', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested), list(sum = sum), na.rm=TRUE)
data_summ <- as.data.frame(data_summ)
data_summ
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested, Individual), list(sum = sum), na.rm=TRUE)
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested, Indiv), list(sum = sum), na.rm=TRUE)
data_summ <- as.data.frame(data_summ)
data_summ
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested, length()), list(sum = sum), na.rm=TRUE)
data_summ <- as.data.frame(data_summ)
data_summ
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested), list(sum = sum), na.rm=TRUE)
data_summ <- as.data.frame(data_summ)
data_summ
data_summ <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Infested), list(Infested = sum), na.rm=TRUE)
data_summ <- as.data.frame(data_summ)
data_summ
count_state <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Indiv), list(Indiv = sum), na.rm=TRUE)
count_state <- as.data.frame(data_summ)
count_state
count_state <- prevalence %>%
group_by(State) %>% #
summarize_at(vars(Indiv), list(Indiv = sum), na.rm=TRUE)
count_state <- as.data.frame(count_state)
count_state
data_averaged <- prevalence %>%
group_by(State,Season) %>% #
summarize_at(vars(Infested), list(Infested = sum))
data_averaged
data_averaged <- prevalence %>%
group_by(State,Year) %>% #
summarize_at(vars(Infested), list(Infested = sum))
data_averaged
head(prevalence)
###########################################################
## ADDING DATASETS
###########################################################
summary_all <- read.table("sampling summary.csv", header=T,sep=",")
###########################################################
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(wesanderson)
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
###########################################################
## ADDING DATASETS
###########################################################
summary_all <- read.table("sampling summary.csv", header=T,sep=",")
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence*100, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data_mean <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Prevalence), list(mean = mean), na.rm=TRUE)
data_state <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Total.oysters), list(sum = sum), na.rm=TRUE)
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
prevalence$Tissue_g <- as.numeric(prevalence$Tissue_g)
prevalence$Thick <- as.numeric(prevalence$Thick)
prevalence$x <- as.numeric(prevalence$x)
prevalence$y <- as.numeric(prevalence$y)
prevalence$z <- as.numeric(prevalence$z)
prevalence.mat <- prevalence[, c(6,13:18)] # selecting the cols with
matrix <- cor(prevalence.mat, use="pairwise.complete.obs")
par(xpd = TRUE)
corrplot(matrix,method="number",type="lower",tl.col="black",tl.srt=45,mar=c(0,0,0,0))
#### CREATING SEASON
yq <- as.yearqtr(as.yearmon(prevalence$Date, "%m/%d/%Y") + 1/12)
prevalence$Season <- factor(format(yq, "%q"), levels = 1:4,
labels = c("Winter", "Winter", "Summer", "Summer"))
prevalence <- prevalence %>% mutate(Date1 = Date)
prevalence$Date1 <- mdy(prevalence$Date1)
prevalence <- prevalence %>% separate(Date1, sep="-", into = c('Year','Month', 'Day'))
prevalence$Date <- mdy(prevalence$Date)
prevalence$Year <- as.numeric(prevalence$Year)
#### SCALING each column individually
###########################################################
prevalence$Lat_sc <- scale(prevalence$Lat, center = TRUE, scale = TRUE)
prevalence$Lng_sc <- scale(prevalence$Lng, center = TRUE, scale = TRUE)
prevalence$Shell_g_sc <- scale(prevalence$Shell_g, center = TRUE, scale = TRUE)
prevalence$Tissue_g_sc <- scale(prevalence$Tissue_g, center = TRUE, scale = TRUE)
prevalence$x_sc <- scale(prevalence$x, center = TRUE, scale = TRUE)
prevalence$y_sc <- scale(prevalence$y, center = TRUE, scale = TRUE)
prevalence$z_sc <- scale(prevalence$z, center = TRUE, scale = TRUE)
prevalence$Thick_sc <- scale(prevalence$Thick, center = TRUE, scale = TRUE)
prevalence$Date_sc <- scale(prevalence$Date, center = TRUE, scale = TRUE)
prevalence$Year_sc <- scale(prevalence$Year, center = TRUE, scale = TRUE)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ y + Culture + Ploidy + Season + Thick_sc + (1|Year_sc) + (1|State/Farm), family="binomial", data = prevalence)
## MODEL TESTING FOR PREVALENCE - ALL STATES
########################
model1 <- glmer(Infested ~ y + Culture + Ploidy + Season + Thick_sc + (1|Year_sc) + (1|State/Farm), family="binomial", data = prevalence)
summary(model1)
anova(model1)
vif(model1)
car::Anova(model1, type=3) # getting p-values
model2 <- glmer(Infested ~ y_sc + Season*State + Culture*State + (1|Year_sc) + (1|Farm), family="binomial", data = prevalence)
summary(model2)
## PLOTTING MODEL 1
########################
allstates <- ggpredict(model1,c("y","Season"))
allstates_plot<-ggplot(allstates,aes(x,predicted,color=group), color=group) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 2)) +
geom_point(size=4) +
geom_errorbar(data=allstates, mapping=aes(x=x, ymin=conf.low, ymax=conf.high), width=0.03) +
geom_line(aes(group=group)) +
xlab("Shell height (cm)") +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
guides(color=guide_legend("Season")) +
theme(plot.title=element_text(size=14,hjust=0.5,face="plain"), axis.text.y=element_text(size=14),
axis.title.y=element_text(size=14), axis.text.x=element_text(size=14), axis.title.x=element_text(size=14),
panel.grid.minor=element_line(color=NA))
allstates_plot
## PLOTTING MODEL 2
########################
summary(model2)
allstates2 <- ggpredict(model2,c("Culture","State"))
allstates_plot2 <- plot(allstates2, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot2
allstates_plot3 <- plot(allstates3, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot3
allstates3 <- ggpredict(model2,c("Season","State"))
allstates_plot3 <- plot(allstates3, facet=TRUE) +
scale_color_manual(values=wes_palette("GrandBudapest1", n = 4)) +
geom_point(size=4) +
ylab(expression(paste("Predicted infestation"))) +
theme_classic() +
ylim(0,1) +
theme(plot.title=element_blank())
allstates_plot3
library(plyr)
library(tidyverse)
library(corrplot)
library(zoo)
library(lme4)
library(car)
library(lubridate)
library(devtools)
library(ggeffects)
library(statmod)
library(wesanderson)
###########################################################
## ADDING DATASETS
###########################################################
summary_all <- read.table("sampling summary.csv", header=T,sep=",")
prevalence <- read.table("master_spreadsheet_all.csv", header=T,sep=",")
prevalence <- subset(prevalence, prevalence$Valve =='R') # only keep R valves
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence*100, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
#ylim(0,45) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1.1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1.25) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1.15) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1.1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= State, y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data_mean <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Prevalence), list(mean = mean), na.rm=TRUE)
data_state <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Total.oysters), list(sum = sum), na.rm=TRUE)
########################
# CHECKING FOR CORRELATION IN oyster metrics
prevalence$Shell_g <- as.numeric(prevalence$Shell_g)
data_state
<- summary_all %>%
data_mean <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Prevalence), list(mean = mean), na.rm=TRUE)
data_mean
data_median <- summary_all %>%
group_by(State) %>% #
summarize_at(vars(Prevalence), list(median = median), na.rm=TRUE)
data_median
level_order <- c('CA', 'OR', 'WA', 'AK')
prev_state <- ggplot(summary_all, aes(x= factor(State, level= level_ordered), y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
level_order <- c('CA', 'OR', 'WA', 'AK')
prev_state <- ggplot(summary_all, aes(x= factor(State, level= level_order), y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
prev_state <- ggplot(summary_all, aes(x= factor(State, level= level_order), y= Prevalence, fill= State, show.legend = FALSE))  +
#geom_abline(slope = 0, intercept = mean(DF), na.rm=T, lwd=0.5, col='black', lty=2) +
stat_boxplot(geom= 'errorbar' , width = 0.3, position = position_dodge(width = 0.75) ) +
geom_boxplot(alpha=0.7, lwd=1, outlier.shape = NA, show.legend = FALSE) +
geom_point(stat = "identity", size= 4, shape = 21, lwd=2, show.legend = FALSE) +
ylim(0,1) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n = 4)) +
labs(x = 'State', y = 'Prevalence', size=16)
prev_state + theme_classic(base_size = 18) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
